apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{ tpl .Values.labels . | nindent 4 | trim }}
spec:
  selector:
    matchLabels:
      {{ tpl .Values.matchLabels . | nindent 6 | trim }}
  serviceName: {{ .Release.Name }}-hs
  replicas: {{ .Values.cluster.size }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        {{ tpl .Values.labels . | nindent 8 | trim }}
    spec:
    {{- if .Values.cluster.affinity }}
      affinity:
        {{ tpl .Values.cluster.affinity . | nindent 8 | trim }}
    {{- end }}
      containers:
      - name: kubernetes-zookeeper
        imagePullPolicy: {{ .Values.cluster.imagePullPolicy }}
        image: "{{ .Values.cluster.image }}"
        {{- if .Values.cluster.resources }}
        resources:
          {{ tpl .Values.cluster.resources . | nindent 10 | trim }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.zookeeper.clientPort }}
          name: client
        - containerPort: {{ .Values.zookeeper.serverPort }}
          name: server
        - containerPort: {{ .Values.zookeeper.leadElectionPort }}
          name: leader-election
        command:
        - sh
        - -c
        - "start-zookeeper \
          --servers={{ .Values.cluster.size }} \
          --data_dir=/var/lib/zookeeper/data \
          --data_log_dir=/var/lib/zookeeper/data/log \
          --conf_dir=/opt/zookeeper/conf \
          --client_port={{ .Values.zookeeper.clientPort }} \
          --election_port={{ .Values.zookeeper.leadElectionPort }} \
          --server_port={{ .Values.zookeeper.serverPort }} \
          --tick_time={{ .Values.zookeeper.tickTime }} \
          --init_limit={{ .Values.zookeeper.initLimit }} \
          --sync_limit={{ .Values.zookeeper.syncLimit }} \
          --heap={{ .Values.zookeeper.heap }} \
          --max_client_cnxns={{ .Values.zookeeper.maxClientCnxns }} \
          --snap_retain_count={{ .Values.zookeeper.snapRetainCount }} \
          --purge_interval={{ .Values.zookeeper.purgeInterval }} \
          --max_session_timeout={{ .Values.zookeeper.maxSessionTimeout }} \
          --min_session_timeout={{ .Values.zookeeper.minSessionTimeout }} \
          --log_level={{ .Values.zookeeper.logLevel }}"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready {{ .Values.zookeeper.clientPort }}"
          {{ tpl .Values.cluster.readinessProbe . | nindent 10 | trim }}
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready {{ .Values.zookeeper.clientPort }}"
          {{ tpl .Values.cluster.livenessProbe . | nindent 10 | trim }}
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/zookeeper
      securityContext:
        runAsUser: {{ .Values.zookeeper.user }}
        fsGroup: {{ .Values.zookeeper.group }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
      labels:
        {{ tpl .Values.labels . | nindent 8 | trim }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.zookeeper.storage }}